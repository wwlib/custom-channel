/**
 * @file webhook.js
 * @author andrew.rapo@jibo.com
 *
 * Generated by the converse-cli tool for use with the Converse AI
 * Plugins SDK. https://developers.converse.ai/
 */

'use strict';

const ExternalResponse  = require('@converseai/plugins-sdk').Payloads.ExternalFunctionResponse;
const Status    = require('@converseai/plugins-sdk').Status;

const Utilities = require('./utilities/utilities')

const User = require('./user')

module.exports = function webhook (app, body) {
 /**
  * Registration parameters assigned to body.payload.registrationData
  * @example
  * var regOne = body.payload.registrationData.regOne;
  */

  /** @type {ExternalFunctionResponse} response The Converse AI response to respond with. */
  
  var response = new ExternalResponse();
  var responseheaders = {
    "Content-Type": "application/json"
  };
  response.setHTTPStatus(200);
  response.setHeaders(responseheaders);

  /*
  * This will return a success status and response to the inbound hook from the Custom Channel.
  * It is important to always call this method when the module has finished
  * otherwise the external call will timeout.
  */

  if (body.payload.bodyData.action == "challenge") {
        Utilities.challenge_handler(app, body, response)
    } else {
      /* Map Message Field */
      var messagedata = body.payload.bodyData.payload.message
      /* Map Custom Variables  from Plugin Registration */
      body.payload.registrationData.variables = Utilities.variableMapper(body.payload.registrationData.variables)
      User.outbound_handler(messagedata, body.payload.registrationData, function(callback) {
        var responsebody = {
          status : "success"
      };
      response.setBody(responsebody);
      app.send(Status.SUCCESS, response);
      })
    }
  }
